<% account.forEach(element => { %>
  <%investment = 0
 element.activity.filter(entry => (((entry.isActive == true && entry.isexpense) && entry.category.includes('Investment')))).forEach(entry => {
 investment += parseFloat(entry.amount*-1.00)
 })%>
  <%
  transactionCount = 0
  monthlyIncome = 0
  monthlyExpense = 0
  monthlyInvested = 0
   element.activity.filter(entry => (entry.isActive == true && (month == entry.tstamp.getMonth() && year  == entry.tstamp.getFullYear()))).forEach(entry => {
     transactionCount += 1
     if(!entry.isexpense && (!entry.category.includes('Debit') && !entry.category.includes('Credit')))
     {
       monthlyIncome += entry.amount
     }
     else if(entry.isexpense && (!entry.category.includes('Debit') && !entry.category.includes('Investment') && !entry.category.includes('Credit'))){
       monthlyExpense += entry.amount
     }
     else if(entry.isexpense && (entry.category.includes('Investment'))){
       monthlyInvested += entry.amount*-1.00
     }
  })

  yearlyIncome = 0
  yearlyExpense = 0
  yearlyInvested = 0
  element.activity.filter(entry => ((entry.isActive == true && (!entry.category.includes('Debit','Credit'))) && (year == entry.tstamp.getFullYear()))).forEach(entry => {
     
    if(!entry.isexpense && (!entry.category.includes('Debit') && !entry.category.includes('Credit')))
     {
       yearlyIncome += entry.amount
     }
     else if(entry.isexpense && (!entry.category.includes('Debit') && !entry.category.includes('Investment') && !entry.category.includes('Credit'))){
       yearlyExpense += entry.amount
     }
     else if(entry.isexpense && (entry.category.includes('Investment'))){
       yearlyInvested += entry.amount*-1.00
     }
  })
  %>  

<style>
  .modal { overflow: visible; }
.modal-body { overflow-y: visible !important; }
.income:hover span {display:none}
.income:hover:before {content:"100%"}
.invested:hover span {display:none}
.invested:hover:before {content:"<%=((investment)*100/element.income).toFixed(2)%>%"}
.expense:hover span {display:none}
.expense:hover:before {content:"<%=((element.expense)*100/element.income).toFixed(2)%>%"}
.balance:hover span {display:none}
.balance:hover:before {content:"<%=(100 - element.expense*100/element.income).toFixed(2)%>%"}

</style>
 
    <%
    const monthCart = ["January","February","March","April","May","June","July","August","September","October","November","December"]
    const stockList = tickerStocks
  const stockValues = priceStocks
    %>
   <%
   const formatter = new Intl.NumberFormat('en-US', {
   style: 'currency',
   currency: element.currency,
   minimumFractionDigits: 2
   })
   const formatterDashboard = new Intl.NumberFormat('en-US', {
   style: 'currency',
   currency: element.currency,
   notation: "compact",
     compactDisplay: "short"
   })
   %>
  
    <div class="fixed-action-btn">
      
      <a class="btn-floating btn-large light-blue darken-4 pulse">
        <i class="large material-icons">layers</i>
      </a>
      <ul>
        <li><a title="Logout" data-toggle="modal" href="#logout" class="btn-floating black modal-trigger"><i class="material-icons">logout</i></a></li>
        <li><a title="Search" href="/account/<%=element._id%>/search" class="btn-floating teal modal-trigger"><i class="material-icons">search</i></a></li>    
        <li><a title="Chart Analytics" href="/account/<%=element._id%>/chart" class="btn-floating purple darken-1 modal-trigger"><i class="material-icons">analytics</i></a></li>
        <li><a title="Pivot Tables" href="/account/<%=element._id%>/pivots" class="btn-floating pink accent-3 modal-trigger"><i class="material-icons">pivot_table_chart</i></a></li>
        <li><a title="Asset Management" href="/account/<%=element._id%>/assets" class="btn-floating orange modal-trigger"><i class="material-icons">account_balance</i></a></li>   
      </ul>
    </div>
  
  <div class="section white" >
  <div class="row" style="margin-bottom: -10px;">
    <div class="col s1 left">
      <%
          link = element._id
          if(month != new Date().getMonth())
          {
            link = '../../'+element._id+'/'+year+'/'+parseFloat(month+1)
          }
      %>
      <a title = "Home" class="btn-floating btn-medium waves-effect waves-light blue darken-4" href="../"><i class="material-icons">roofing</i></a>
    </div>
  <div class="col s11">
          <h2 class="header center blue-text text-darken-4" style="font-family:Roboto; margin-bottom: -10px; margin-top: 0px; margin-right: 120px;"><%=element.name%>'s Financial Story</h2>
    </div>
          
    </div>
  </div>
  
  <div class="container">
    <% 
    assetsWorth = 0
    element.asset.filter(entry => entry.isActive == true).forEach(entry => {
      if(entry.category == "Gold"){
        assetPrice = priceGold*entry.units                  
      }
      else if(entry.category == "Silver"){
        assetPrice = priceSilver*entry.units
      }
      else if(entry.category == "Equity"){
        position = stockList.indexOf(entry.description)
        assetPrice = stockValues[position]*entry.units
      }
      else if(entry.category == "Extra Charge"){
        assetPrice = 0
      }
      else{
        assetPrice = entry.tape*entry.units
      }
      assetsWorth += assetPrice
    })%>
    <div class="row">
      <div class="col s6" style="margin-bottom: -15px;">
        <div class="progress green lighten-4 tooltipped" data-position="left" data-tooltip="<%=((element.transum+element.onhold+assetsWorth-element.debt)/element.dnw*100).toFixed(2)%>% Goal Completed<br><%= formatterDashboard.format(element.transum+element.onhold+assetsWorth-element.debt)%> of <%=formatterDashboard.format(element.dnw)%>">
          <div class="determinate green darken-4" style=<%="width:"+(element.transum+element.onhold+assetsWorth-element.debt)/element.dnw*100+"%"%>></div>
      </div>
        </div>
        <div class="col s6" style="margin-bottom: -15px;">
          <%
            tday = new Date()
            bday = element.dob
            diff = Math.abs(tday - bday)
            diff = Math.ceil(diff / (1000 * 60 * 60 * 24)); 
            years = diff/365.25
            rdiff = element.aor*365.25
            percgoal = diff*100/rdiff
          %>
          <div class="progress red lighten-4 tooltipped" data-position="right" data-tooltip="<%=percgoal.toFixed(2)%>% Time Finished<br><%=years.toFixed(2)%> of <%=element.aor%> Years">
            <div class="determinate red darken-4" style=<%="width:"+ percgoal +"%"%>></div>
        </div>
          </div>
      </div>
  
              <table class="striped centered responsive-table"style="margin-top:-30px">   
                        <thead>
                          <tr>
                            <th>Networth</th>
                            <th>Debt</th>
                            <th class = "income"><span>Income</span></th>
                            <th class = "expense"><span>Expense</span></th>
                              <th class = "invested"><span>Invested</span></th>
                              <th class = "balance"><span>Balance</span></th>
                              <th>Transactions</th>
                              <!--<th>On Hold</th>-->
                              <th>Unexplained</th>
                              
                          </tr>
                        </thead>
                        <tbody>
                         
                                  
                          <tr style="font-weight:500;">
                            <td class="tooltipped" data-position="bottom" data-tooltip="<%=formatter.format(element.transum)%>+<%=formatter.format(assetsWorth)%>-<%=formatter.format(element.debt)%> = <%=formatter.format(element.transum+assetsWorth-element.debt)%>"><%= formatterDashboard.format(element.transum+assetsWorth-element.debt)%></td>
                            <td data-position="bottom" data-tooltip="<%=formatter.format(element.debt)%>" class="tooltipped" ><%= formatterDashboard.format(element.debt)%></td>
                            <td data-position="bottom" data-tooltip="<%=formatter.format(element.income)%>" class = "tooltipped green-text text-darken-1"><%= formatterDashboard.format(element.income)%>&#9650;</td>
                            <td data-position="bottom" data-tooltip="<%=formatter.format(element.expense)%>" class = "tooltipped red-text text-darken-1"><%= formatterDashboard.format(element.expense)%>&#x25bc;</td>
                            <td data-position="bottom" data-tooltip="<%=formatter.format(investment)%>" class="tooltipped" ><%=formatterDashboard.format(investment)%></td>
                            <td data-position="bottom" data-tooltip="<%=formatter.format(element.currbal)%>" class="tooltipped" ><%= formatterDashboard.format(element.currbal)%></td>
                            <td data-position="bottom" data-tooltip="<%=formatter.format(element.transum)%>" class="tooltipped" ><%= formatterDashboard.format(element.transum)%></td>
                            <!--<td data-position="bottom" data-tooltip="<%=formatter.format(element.onhold)%>" class="tooltipped" ><%= formatterDashboard.format(element.onhold)%></td>-->
                            <% variance = element.currbal-(element.transum+element.onhold)
                              if (variance < 0 && variance > -0.01)
                              {
                                variance *= -1.00
                              }
                            %>
                            <td data-position="bottom" data-tooltip="<%=formatter.format(element.currbal)%>-<%=formatter.format(element.transum+element.onhold)%> = <%=formatter.format(variance)%>" class="tooltipped" ><%= formatterDashboard.format(variance)%></td>
                            
                           
                            
                          </tr>
                        </tbody>
                      </table>
               
            </div>
             
  
                
                 
              
               
              
              
       <br>
              


      <%
        uaccount = formatter.format(0)
        tcnt = 0
        ccnt = 0
        dcnt = 0
        actl = 0
        astl = 0
        if (element.uincome != 0) {
          uaccount = formatter.format(element.uincome)
        }
        else if (element.uexpense != 0) {
          uaccount = formatter.format(element.uexpense)
        }
        element.activity.forEach(entry => {
          tcnt += 1
          if(entry.isexpense){dcnt += 1}
          else {ccnt += 1}
        })
              categories = []
              balance = []
              times = []
              bigxpam = 0
              bigxpcat = ''
              bigxpdes = ''
              element.activity.filter(entry => (((entry.isActive == true && entry.isexpense) && !entry.category.includes('Investment')))).forEach(entry => {
                if (parseFloat(entry.amount*-1.00) > bigxpam){bigxpam = parseFloat(entry.amount*-1.00);bigxpcat = entry.category;bigxpdes = entry.description;}
                if(!categories.includes(entry.category)){
                 categories.push(entry.category)
                    balance.push(0)
                    times.push(0)
                }
                if(categories.includes(entry.category)){
                i = categories.indexOf(entry.category)
                    balance[i] += parseFloat(entry.amount*-1.00)
                    times[i] += 1
                    }
              })
              actl = balance.length
              mstspnt = Math.max.apply(null,balance)
              mstindx = parseInt(balance.reduce((iMax, x, i, balance) => x > balance[iMax] ? i : iMax, 0))
              mstcat = categories[mstindx];
              balance.splice(mstindx,1)
              categories.splice(mstindx,1)
              mstindx = parseInt(balance.reduce((iMax, x, i, balance) => x > balance[iMax] ? i : iMax, 0))
              mstspnt2 = Math.max.apply(null,balance)
              mstcat2 = categories[mstindx];
              balance.splice(mstindx,1)
              categories.splice(mstindx,1)
              mstindx = parseInt(balance.reduce((iMax, x, i, balance) => x > balance[iMax] ? i : iMax, 0))
              mstspnt3 = Math.max.apply(null,balance)
              mstcat3 = categories[mstindx];
              
              xmstspnt = Math.max.apply(null,times)
              xmstindx = parseInt(times.reduce((iMax, x, i, times) => x > times[iMax] ? i : iMax, 0))
              xmstcat = categories[xmstindx];
              times.splice(xmstindx,1)
              categories.splice(xmstindx,1)
              xmstindx = parseInt(times.reduce((iMax, x, i, times) => x > times[iMax] ? i : iMax, 0))
              xmstspnt2 = Math.max.apply(null,times)
              xmstcat2 = categories[xmstindx];
              times.splice(xmstindx,1)
              categories.splice(xmstindx,1)
              xmstindx = parseInt(times.reduce((iMax, x, i, times) => x > times[iMax] ? i : iMax, 0))
              xmstspnt3 = Math.max.apply(null,times)
              xmstcat3 = categories[xmstindx];

              categories = []
              balance = []
              bigernam = 0
              bigerncat = ''
              bigerndes = ''
              element.activity.filter(entry => (((entry.isActive == true && !entry.isexpense) && !entry.category.includes('Savings')))).forEach(entry => {
                if (parseFloat(entry.amount) > bigernam){bigernam = parseFloat(entry.amount);bigerncat = entry.category;bigerndes = entry.description;}
                if(!categories.includes(entry.category)){
                 categories.push(entry.category)
                    balance.push(0)
                    times.push(0)
                }
                if(categories.includes(entry.category)){
                i = categories.indexOf(entry.category)
                    balance[i] += parseFloat(entry.amount)
                    times[i] += 1
                    }
              })
              if(actl >= 3 && balance.length >=3){actl = balance.length}
              else{actl = 0}
              mstern = Math.max.apply(null,balance)
              mstindx = parseInt(balance.reduce((iMax, x, i, balance) => x > balance[iMax] ? i : iMax, 0))
              mstcatenr = categories[mstindx];
              balance.splice(mstindx,1)
              categories.splice(mstindx,1)
              mstindx = parseInt(balance.reduce((iMax, x, i, balance) => x > balance[iMax] ? i : iMax, 0))
              mstern2 = Math.max.apply(null,balance)
              mstcatenr2 = categories[mstindx];
              balance.splice(mstindx,1)
              categories.splice(mstindx,1)
              mstindx = parseInt(balance.reduce((iMax, x, i, balance) => x > balance[iMax] ? i : iMax, 0))
              mstern3 = Math.max.apply(null,balance)
              mstcatenr3 = categories[mstindx];

              icategories = []
                ibalance = []
                biginvam = 0
                biginvunt = 0
              biginvcat = ''
              biginvdes = ''
                element.asset.filter(entry => (((entry.isActive == true)))).forEach(entry => {
                  if (parseFloat(entry.amount) > biginvam){biginvam = parseFloat(entry.amount);biginvcat = entry.category;biginvdes = entry.description;biginvunt = entry.units}
                  if(!icategories.includes(entry.category)){
                   icategories.push(entry.category)
                      ibalance.push(0)
                  }
                  if(icategories.includes(entry.category)){
                  i = icategories.indexOf(entry.category)
                      ibalance[i] += parseFloat(entry.amount)
                      }
                })
                astl = ibalance.length
                imstern = Math.max.apply(null,ibalance)
                imstindx = parseInt(ibalance.reduce((iMax, x, i, ibalance) => x > ibalance[iMax] ? i : iMax, 0))
                imstcatenr = icategories[imstindx]
                ibalance.splice(imstindx,1)
                icategories.splice(imstindx,1)
                imstindx = parseInt(ibalance.reduce((iMax, x, i, ibalance) => x > ibalance[iMax] ? i : iMax, 0))
                imstern2 = Math.max.apply(null,ibalance)
                imstcatenr2 = icategories[imstindx]
                diffdat = ((new Date()).getTime() - (new Date((element.tcreate))).getTime())/(86400000)
                cagr = ((element.transum-element.debt+assetsWorth)/element.activity[0].amount)
                cagr = ((cagr**(1/(diffdat/365.25)) - 1)*100).toFixed(2)
                cagrc = ((element.transum)/element.activity[0].amount)
                cagrc = ((cagrc**(1/(diffdat/365.25)) - 1)*100).toFixed(2)
      %>
  

<div class="container">
  <div class="row">
    <div class="col s3">
      <div class="card-panel green darken-1">
        <h5 style="font-family: Noto Sans;" class="white-text center"><%=formatter.format(element.income - element.uincome)%> have been credited through <%=ccnt%> transactions or <%=(diffdat/30.4367).toFixed(2)%> months i.e. <%=formatter.format((element.income - element.uincome)/(ccnt))%> per transaction or <%=formatter.format((element.income - element.uincome)/(diffdat/30.4367))%> per month.</h5>
      </div>
      <%if (actl >= 3) {%>
      <div class="card-panel green darken-3">
        <h6 style="font-family: Noto Sans;" class="white-text center">Top 3 Money Makers</h6>
        <h6 style="font-family: Noto Sans;" class="white-text center"><%=mstcatenr%> - <%=formatter.format(mstern)%><br><%=mstcatenr2%> - <%=formatter.format(mstern2)%><br><%=mstcatenr3%> - <%=formatter.format(mstern3)%></h6>
      </div>
      <%}%>
    </div>
    <div class="col s6">
      <div class="card-panel light-blue darken-4">
        <h5 style="font-family: Noto Sans;" class="white-text center"><%=element.name%>'s account was created on <script type="text/javascript">
          document.write(moment(new Date("<%=element.tcreate%>"),"ddd MMM DD YYYY HH:MM:SS ZZ").format("ddd MMM DD, YYYY")) 
      </script>, with an opening amount of <%=formatter.format(element.activity[0].amount)%>.
      </h5>
      </div>
      <div class="card-panel purple darken-1">
        <h5 style="font-family: Noto Sans;" class="white-text center">After <%=tcnt%> transactions & <script type="text/javascript">document.write(Math.round("<%=diffdat%>"));</script> days, your current networth is <%=formatter.format(element.transum-element.debt+assetsWorth)%> (CAGR - <%=cagr%>%) 
      with <%=formatter.format(element.transum)%> (CAGR - <%=cagrc%>%) as liquid cash.
      </h5>
      </div>
      <%if (element.unicome > 0 || element.uexpense > 0){%>
      <div class="card-panel black">
        <h5 style="font-family: Noto Sans;" class="white-text center">
      Transactions amounting to <%=uaccount%> could not be accounted for as they were done before creating this account.
      </h5>
      </div>
      <%}%>
    </div>
    <div class="col s3">
      <div class="card-panel red darken-1">
        <h5 style="font-family: Noto Sans;" class="white-text center"><%=formatter.format(element.expense - element.uexpense)%> have been debited through <%=dcnt%> transactions or <%=(diffdat/30.4367).toFixed(2)%> months i.e. <%=formatter.format((element.expense - element.uexpense)/(dcnt))%> per transaction or <%=formatter.format((element.expense - element.uexpense)/(diffdat/30.4367))%> per month.</h5>
      </div>
      <%if (actl >= 3) {%>
      <div class="card-panel red darken-3">
        <h6 style="font-family: Noto Sans;" class="white-text center">Top 3 Money Exhausters</h6>
        <h6 style="font-family: Noto Sans;" class="white-text center"><%=mstcat%> - <%=formatter.format(mstspnt)%><br><%=mstcat2%> - <%=formatter.format(mstspnt2)%><br><%=mstcat3%> - <%=formatter.format(mstspnt3)%></h6>
      </div>
      <%}%>
    </div>
  </div>
  <%if (astl >= 1) {%>
  <div class="row">
    <div class="col s4">
      <div class="card-panel teal darken-1">
        <h5 style="font-family: Noto Sans;" class="white-text center">The single biggest earning till date has been through <%=bigerncat%> amounting to <%=formatter.format(bigernam)%> by receiving <%=bigerndes%>.</h5>
      </div>
    </div>
    <div class="col s4">
      <div class="card-panel orange darken-1">
        <h5 style="font-family: Noto Sans;" class="white-text center">The single biggest investment till date has been on <%=biginvcat%> amounting to <%=formatter.format(biginvam)%> for buying <%=biginvunt%>gm <%=biginvdes%>.</h5>
      </div>
    </div>
    <div class="col s4">
      <div class="card-panel pink darken-1">
        <h5 style="font-family: Noto Sans;" class="white-text center">The single biggest expense till date has been on <%=bigxpcat%> amounting to <%=formatter.format(bigxpam)%> for buying <%=bigxpdes%>.</h5>
      </div>
    </div>
  </div>
  <%}
  else if(actl >= 3){
  %>
  <div class="row">
    <div class="col s6">
      <div class="card-panel teal darken-1">
        <h5 style="font-family: Noto Sans;" class="white-text center">The single biggest earning till date has been through <%=bigerncat%> amounting to <%=formatter.format(bigernam)%> by receiving <%=bigerndes%>.</h5>
      </div>
    </div>
    <div class="col s6">
      <div class="card-panel pink darken-1">
        <h5 style="font-family: Noto Sans;" class="white-text center">The single biggest expense till date has been on <%=bigxpcat%> amounting to <%=formatter.format(bigxpam)%> for buying <%=bigxpdes%>.</h5>
      </div>
    </div>
  </div>
  <%}%>
  <div class="row">
    <div class="col s12">
      <%if (astl >= 2) {%>
        <div class="card-panel yellow darken-4">
          <h5 style="font-family: Noto Sans;" class="white-text center">
            The most amount of money has been invested on <%=imstcatenr%>, <%=imstcatenr2%>, and so on amounting to <%=formatter.format(imstern)%>, <%=formatter.format(imstern2)%>, and so on respectively.
        </h5>
        </div>
        <%}%>
    </div>
  </div>
</div>

 
           <div id = "logout" class="modal white bottom-sheet">
            <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Do you want to log out of the app, take a backup and delete backups older than 10 days?</h5>
            <a class="modal-close waves-effect waves-grey btn-flat right" style="top: -45px;"><i class="material-icons">close</i></a>
            <div class="row">
              <form action="/account?_method=PUT" method="POST">
                <div class="input-field">
                  <input name = "action" type="hidden" placeholder = "Account Name" class="validate" required="" aria-required="true" value = "logout">
                </div>
                <div class="input-field col s6 offset-s3 left center" style="width: 50%;">
                  <input class="btn light-blue darken-4 white-text" value="Yes" type="submit">
                  <a class="modal-close btn light-blue darken-4 white-text">No</a>
                </div>
                </form>
              </div>
              <h6 id="warning" style="font-family:Roboto;" class="center red-text"></h6>
          </div>
              <div id = "chperiod" class="modal white">
                <h5 class="header center light-blue-text text-darken-4" style="font-family:Roboto;">Change Period</h5>
    <a class="modal-close waves-effect waves-grey btn-flat right" style="top: -45px;"><i class="material-icons">close</i></a>
    <div class="row">
      <form action="/account/stats?_method=PUT" method="POST">
        <div class="input-field">
          <input name = "id" type="hidden" class="validate" required="" aria-required="true" value = "<%=element._id %>">
        </div>
        <div class="input-field col s5 offset-s1 center">
          <select name = "month" class="browser-default" style="margin-top:7px;">
          <%for(i = 0;i < 12;i++){%>
          <option value="<%=i+1%>" <%= month == i?'selected':''%>><%=monthCart[i]%></option>
        <%}%>
        </select>
        </div>
        <%
        yearCart = []
      count = new Date().getFullYear() - element.tcreate.getFullYear()
      for(i = 0;i<=count;i++){
        yearCart.push(new Date().getFullYear()-i)
      }
        %>
        
        <div class="input-field col s5 center">
          <select name = "year" class="browser-default" style="margin-top:7px;">
          <%yearCart.forEach(year => {%>
          <option value="<%=year%>"><%=year%> </option>
        <%})%>
        </select>
        </div>
        <div class="input-field col s6 offset-s3 left center" style="width: 50%;">
          <input class="btn light-blue darken-4 white-text" value="CHANGE" type="submit">
        </div>
        </form>
      </div>
    </div>            

    <%})%>